import Flynn
import Foundation
import Socket
import Hitch
import Spanker

/// A simple example service
open class HelloWorldService: Actor, Service {
    
    public let unsafeServiceName: Hitch = "HelloWorldService"
    
    private let response = JsonElement(unknown: "Hello World!")
        
    private func _beHandleRequest(jsonElement: JsonElement,
                                  httpRequest: HttpRequest,
                                  _ returnCallback: @escaping (JsonElement) -> ()) {
        returnCallback(response)
    }
    
    
}

// MARK: - Autogenerated by FlynnLint
// Contents of file after this marker will be overwritten as needed

extension HelloWorldService {

    @discardableResult
    public func beHandleRequest(jsonElement: JsonElement,
                                httpRequest: HttpRequest,
                                _ sender: Actor,
                                _ callback: @escaping ((JsonElement) -> Void)) -> Self {
        unsafeSend {
            self._beHandleRequest(jsonElement: jsonElement, httpRequest: httpRequest) { arg0 in
                sender.unsafeSend {
                    callback(arg0)
                }
            }
        }
        return self
    }

}
